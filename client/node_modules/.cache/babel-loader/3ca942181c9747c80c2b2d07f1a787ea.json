{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryoman\\\\Desktop\\\\coding_stuff\\\\MERN Projects\\\\EscapeVision\\\\client\\\\src\\\\components\\\\QuestionContainer.js\";\nimport React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst QuestionContainer = props => {\n  //initialize hisotry object so that we can move on to the next part when a button is clicked\n  let history = useHistory(); //builds an array that is loopable, allowing all the images to easily be displayed\n\n  let NUMBER_OF_IMAGES = 2;\n  let questionContainerArray = new Array(2);\n\n  for (let i = 0; i < questionContainerArray.length; i++) {\n    questionContainerArray[i] = \"\";\n  } //initializes the function that will allow the user to go to the confirmation page\n\n\n  function goNext(e) {\n    history.push({\n      pathname: '/confirm',\n      state: e.target.alt\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Chose the image that the game will hide behind\"), questionContainerArray.map((questionContainer, index) => /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: require(`../images/question container/question_container_${index + 1}.jpg`),\n    width: \"200px\",\n    height: \"200px\",\n    alt: `question_container_${index + 1}`,\n    onClick: e => goNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default QuestionContainer;","map":{"version":3,"sources":["C:/Users/Aryoman/Desktop/coding_stuff/MERN Projects/EscapeVision/client/src/components/QuestionContainer.js"],"names":["React","Fragment","useHistory","QuestionContainer","props","history","NUMBER_OF_IMAGES","questionContainerArray","Array","i","length","goNext","e","push","pathname","state","target","alt","map","questionContainer","index","require"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAGA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAC/B;AACA,MAAIC,OAAO,GAAGH,UAAU,EAAxB,CAF+B,CAK/B;;AACA,MAAII,gBAAgB,GAAG,CAAvB;AACA,MAAIC,sBAAsB,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAA7B;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,sBAAsB,CAACG,MAA1C,EAAkDD,CAAC,EAAnD,EAAsD;AAClDF,IAAAA,sBAAsB,CAACE,CAAD,CAAtB,GAA4B,EAA5B;AACH,GAV8B,CAa/B;;;AACA,WAASE,MAAT,CAAgBC,CAAhB,EAAkB;AACdP,IAAAA,OAAO,CAACQ,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASC;AAFP,KAAb;AAIH;;AAED,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADJ,EAEKV,sBAAsB,CAACW,GAAvB,CAA2B,CAACC,iBAAD,EAAoBC,KAApB,kBACxB;AAAK,IAAA,GAAG,EAAIA,KAAZ;AAAmB,IAAA,GAAG,EAAIC,OAAO,CAAE,mDAAkDD,KAAK,GAAC,CAAE,MAA5D,CAAjC;AAAqG,IAAA,KAAK,EAAE,OAA5G;AAAoH,IAAA,MAAM,EAAG,OAA7H;AAAqI,IAAA,GAAG,EAAK,sBAAqBA,KAAK,GAAC,CAAE,EAA1K;AAA6K,IAAA,OAAO,EAAIR,CAAC,IAAID,MAAM,CAACC,CAAD,CAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CADJ;AAQH,CA7BD;;AAgCA,eAAeT,iBAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst QuestionContainer = props => {\r\n    //initialize hisotry object so that we can move on to the next part when a button is clicked\r\n    let history = useHistory();\r\n    \r\n\r\n    //builds an array that is loopable, allowing all the images to easily be displayed\r\n    let NUMBER_OF_IMAGES = 2;\r\n    let questionContainerArray = new Array(2);\r\n    for(let i = 0; i < questionContainerArray.length; i++){\r\n        questionContainerArray[i] = \"\";\r\n    }\r\n    \r\n\r\n    //initializes the function that will allow the user to go to the confirmation page\r\n    function goNext(e){\r\n        history.push({\r\n            pathname: '/confirm',\r\n            state: e.target.alt\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1>Chose the image that the game will hide behind</h1>\r\n            {questionContainerArray.map((questionContainer, index) => (\r\n                <img key = {index} src = {require(`../images/question container/question_container_${index+1}.jpg`)} width= \"200px\" height = \"200px\" alt = {`question_container_${index+1}`} onClick = {e => goNext(e)} />\r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default QuestionContainer;"]},"metadata":{},"sourceType":"module"}