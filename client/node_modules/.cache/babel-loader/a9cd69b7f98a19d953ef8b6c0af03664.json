{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryoman\\\\Desktop\\\\coding_stuff\\\\MERN Projects\\\\EscapeVision\\\\client\\\\src\\\\components\\\\builder\\\\Builder.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport '../../CSS/builder/builder.css';\n/*This is the component that a teacher will be redirected to after they select\r\nwhat subject they are going to be teaching. I am going to add some redux to the\r\napp so that the application can keep track of what subject the teacher is planning\r\non teaching, but that will come later */\n//Currently working on allowing a user to upload a photo as a question\n\nconst Builder = () => {\n  //This code sets the number of questions that the teacher will add.\n  //This will become a scalable value later on\n  const NUMBER_OF_QUESTIONS = 1;\n  const questionArray = new Array(NUMBER_OF_QUESTIONS);\n\n  for (let i = 1; i <= NUMBER_OF_QUESTIONS; i++) {\n    questionArray[i] = i;\n  } //State component checks to see if form has been submitted, if it has,\n  //state tells the redirect component to redirect to choosing a game screen\n\n\n  const [redirect, toggleRedirect] = useState(false); //on submit will redirect to chosing the game if all fields are filled out\n\n  const onSubmit = e => {\n    e.preventDefault();\n    toggleRedirect(true);\n  }; //fucntion to check state of redirect\n\n\n  const checkRedirect = () => {\n    if (redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/game-creator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"builder-top-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"builder-back-button\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"builder-container\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Enter the problems along with the correct answers here\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-answer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questions-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, questionArray.map(question => /*#__PURE__*/React.createElement(\"li\", {\n    id: NUMBER_OF_QUESTIONS + question,\n    className: \"question-li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-image-text-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: question,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Answers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, questionArray.map(answer => /*#__PURE__*/React.createElement(\"li\", {\n    id: answer,\n    className: \"question-li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: answer,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Builder;","map":{"version":3,"sources":["C:/Users/Aryoman/Desktop/coding_stuff/MERN Projects/EscapeVision/client/src/components/builder/Builder.js"],"names":["React","Fragment","useState","Redirect","Link","Builder","NUMBER_OF_QUESTIONS","questionArray","Array","i","redirect","toggleRedirect","onSubmit","e","preventDefault","checkRedirect","map","question","answer"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport {Redirect, Link } from 'react-router-dom'\r\nimport '../../CSS/builder/builder.css';\r\n/*This is the component that a teacher will be redirected to after they select\r\nwhat subject they are going to be teaching. I am going to add some redux to the\r\napp so that the application can keep track of what subject the teacher is planning\r\non teaching, but that will come later */\r\n\r\n\r\n//Currently working on allowing a user to upload a photo as a question\r\nconst Builder = () => {\r\n    //This code sets the number of questions that the teacher will add.\r\n    //This will become a scalable value later on\r\n    const NUMBER_OF_QUESTIONS = 1;\r\n    const questionArray = new Array(NUMBER_OF_QUESTIONS);\r\n    for(let i = 1; i <= NUMBER_OF_QUESTIONS; i++){\r\n        questionArray[i] = i;\r\n    }\r\n\r\n    //State component checks to see if form has been submitted, if it has,\r\n    //state tells the redirect component to redirect to choosing a game screen\r\n    const [redirect, toggleRedirect] = useState(false);\r\n\r\n    //on submit will redirect to chosing the game if all fields are filled out\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        toggleRedirect(true);\r\n    }\r\n\r\n    //fucntion to check state of redirect\r\n    const checkRedirect = () =>{\r\n        if(redirect){\r\n            return <Redirect to = '/game-creator' />\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className = \"builder-top-spacer\"></div>\r\n        {/*Link allows user to go back to the subject selector page */}\r\n        <Link className = \"builder-back-button\" to = \"/\">Back</Link>\r\n        <form className = 'builder-container' onSubmit = {e => onSubmit(e)}>\r\n            <h3>Enter the problems along with the correct answers here</h3>\r\n            <div className = \"question-answer-container\">\r\n                <div className = \"questions-container\">\r\n                    <span>Questions</span>\r\n                    <ul>\r\n    {/*mapping through the number of questions and creating an input for that */}\r\n                        {questionArray.map(question =>(\r\n                            <li id = {NUMBER_OF_QUESTIONS + question} className = \"question-li\">\r\n                                <div className = 'question-image-text-holder'>\r\n                                    <input type = 'file' accept = \"image/*\" />\r\n                                    <input placeholder = {question}  required/>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className = \"answers-container\">\r\n                    <span>Answers</span>\r\n                    <ul>\r\n    {/*mapping through the number of questions and creating an input for that */}\r\n                        {questionArray.map(answer =>(\r\n                            <li id = {answer} className = \"question-li\">\r\n                                <input placeholder = {answer} required/>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className= 'input-holder'>\r\n                <input type = 'submit' />\r\n            </div>\r\n        </form>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Builder;"]},"metadata":{},"sourceType":"module"}