{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryoman\\\\Desktop\\\\coding_stuff\\\\MERN Projects\\\\EscapeVision\\\\client\\\\src\\\\components\\\\ChooseMirror.js\";\nimport React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom'; //redux imports\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport addMirror from '../actions/userSelections';\n\nconst ChooseMirror = ({\n  addMirror\n}) => {\n  console.log(props.location.state);\n  let history = useHistory(); //initializes a loop that can be run to generate all of the mirrors that are stored\n\n  const NUMBER_OF_MIRRORS = 2;\n  let mirrorArray = new Array(NUMBER_OF_MIRRORS);\n\n  for (let i = 0; i < mirrorArray.length; i++) {\n    mirrorArray[i] = \"\";\n  } //called whenever an image is clicked, and will pass on the data of the image that was clicked to the escape door\n\n\n  function goNext(e) {\n    history.push({\n      pathname: '/door-chooser',\n      state: e.target.alt\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"game-chooser-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Choose the mirror that the safe will be hidden behind\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-positioner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, mirrorArray.map((mirror, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: require(`../images/mirrors/mirror_${index + 1}.jpg`),\n    width: \"400px\",\n    height: \"400px\",\n    alt: `mirror_${index + 1}`,\n    onClick: e => goNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })))));\n};\n\nChooseMirror.propTypes = {\n  addMirror: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addMirror\n})(ChooseMirror);","map":{"version":3,"sources":["C:/Users/Aryoman/Desktop/coding_stuff/MERN Projects/EscapeVision/client/src/components/ChooseMirror.js"],"names":["React","Fragment","useHistory","connect","PropTypes","addMirror","ChooseMirror","console","log","props","location","state","history","NUMBER_OF_MIRRORS","mirrorArray","Array","i","length","goNext","e","push","pathname","target","alt","map","mirror","index","require","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAiB;AAClCE,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,CAAeC,KAA3B;AAEA,MAAIC,OAAO,GAAGV,UAAU,EAAxB,CAHkC,CAIlC;;AACA,QAAMW,iBAAiB,GAAG,CAA1B;AACA,MAAIC,WAAW,GAAG,IAAIC,KAAJ,CAAUF,iBAAV,CAAlB;;AACA,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,WAAW,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACvCF,IAAAA,WAAW,CAACE,CAAD,CAAX,GAAiB,EAAjB;AACH,GATiC,CAWlC;;;AACA,WAASE,MAAT,CAAgBC,CAAhB,EAAkB;AACdP,IAAAA,OAAO,CAACQ,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,eADD;AAETV,MAAAA,KAAK,EAAEQ,CAAC,CAACG,MAAF,CAASC;AAFP,KAAb;AAIH;;AACD,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAG,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,eAEI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,WAAW,CAACU,GAAZ,CAAgB,CAACC,MAAD,EAASC,KAAT,kBACb;AAAK,IAAA,GAAG,EAAIA,KAAZ;AAAmB,IAAA,SAAS,EAAG,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAIA,KAAZ;AAAmB,IAAA,GAAG,EAAIC,OAAO,CAAE,4BAA2BD,KAAK,GAAC,CAAE,MAArC,CAAjC;AAA8E,IAAA,KAAK,EAAG,OAAtF;AAA8F,IAAA,MAAM,EAAG,OAAvG;AAA+G,IAAA,GAAG,EAAK,UAASA,KAAK,GAAC,CAAE,EAAxI;AAA2I,IAAA,OAAO,EAAIP,CAAC,IAAID,MAAM,CAACC,CAAD,CAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,CAFJ,CADJ;AAaH,CA/BD;;AAiCAb,YAAY,CAACsB,SAAb,GAAwB;AACpBvB,EAAAA,SAAS,EAAED,SAAS,CAACyB,IAAV,CAAeC;AADN,CAAxB;AAGA,eAAe3B,OAAO,CAAC,IAAD,EAAO;AAACE,EAAAA;AAAD,CAAP,CAAP,CAA2BC,YAA3B,CAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n//redux imports\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport addMirror from '../actions/userSelections';\r\nconst ChooseMirror = ({addMirror}) => {\r\n    console.log(props.location.state);\r\n    \r\n    let history = useHistory();\r\n    //initializes a loop that can be run to generate all of the mirrors that are stored\r\n    const NUMBER_OF_MIRRORS = 2;\r\n    let mirrorArray = new Array(NUMBER_OF_MIRRORS);\r\n    for(let i = 0; i < mirrorArray.length; i++){\r\n        mirrorArray[i] = \"\";\r\n    }\r\n\r\n    //called whenever an image is clicked, and will pass on the data of the image that was clicked to the escape door\r\n    function goNext(e){\r\n        history.push({\r\n            pathname: '/door-chooser',\r\n            state: e.target.alt\r\n        })\r\n    }\r\n    return(\r\n        <Fragment> \r\n            <h1 className = \"game-chooser-text\">Choose the mirror that the safe will be hidden behind</h1>\r\n            <div className = \"img-positioner\">\r\n                {mirrorArray.map((mirror, index) => (\r\n                    <div key = {index} className = \"img-holder\">\r\n                        <img key = {index} src = {require(`../images/mirrors/mirror_${index+1}.jpg`)} width = \"400px\" height = \"400px\" alt = {`mirror_${index+1}`} onClick = {e => goNext(e)}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n   \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nChooseMirror.propTypes= {\r\n    addMirror: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, {addMirror})(ChooseMirror);"]},"metadata":{},"sourceType":"module"}