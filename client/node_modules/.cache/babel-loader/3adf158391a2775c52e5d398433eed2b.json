{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryoman\\\\Desktop\\\\coding_stuff\\\\MERN Projects\\\\EscapeVision\\\\client\\\\src\\\\components\\\\QuestionContainer.js\";\nimport React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom'; //redux imports\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addContainer } from '../actions/userSelections';\n\nconst QuestionContainer = ({\n  addContainer\n}) => {\n  //initialize hisotry object so that we can move on to the next part when a button is clicked\n  let history = useHistory(); //builds an array that is loopable, allowing all the images to easily be displayed\n\n  let NUMBER_OF_IMAGES = 2;\n  let questionContainerArray = new Array(2);\n\n  for (let i = 0; i < questionContainerArray.length; i++) {\n    questionContainerArray[i] = \"\";\n  } //initializes the function that will allow the user to go to the confirmation page\n\n\n  function goNext(e) {\n    addContainer(e.target.src);\n    history.push({\n      pathname: '/confirm',\n      state: e.target.alt\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"game-chooser-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Chose the image that the game will hide behind\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-positioner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, questionContainerArray.map((questionContainer, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: index,\n    src: require(`../images/question container/question_container_${index + 1}.jpg`),\n    width: \"400px\",\n    height: \"400px\",\n    alt: `question_container_${index + 1}`,\n    onClick: e => goNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })))));\n};\n\nQuestionContainer.propTypes = {\n  addContainer: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addContainer\n})(QuestionContainer);","map":{"version":3,"sources":["C:/Users/Aryoman/Desktop/coding_stuff/MERN Projects/EscapeVision/client/src/components/QuestionContainer.js"],"names":["React","Fragment","useHistory","connect","PropTypes","addContainer","QuestionContainer","history","NUMBER_OF_IMAGES","questionContainerArray","Array","i","length","goNext","e","target","src","push","pathname","state","alt","map","questionContainer","index","require","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAoB;AAC1C;AACA,MAAIE,OAAO,GAAGL,UAAU,EAAxB,CAF0C,CAK1C;;AACA,MAAIM,gBAAgB,GAAG,CAAvB;AACA,MAAIC,sBAAsB,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAA7B;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,sBAAsB,CAACG,MAA1C,EAAkDD,CAAC,EAAnD,EAAsD;AAClDF,IAAAA,sBAAsB,CAACE,CAAD,CAAtB,GAA4B,EAA5B;AACH,GAVyC,CAa1C;;;AACA,WAASE,MAAT,CAAgBC,CAAhB,EAAkB;AACdT,IAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,GAAV,CAAZ;AACAT,IAAAA,OAAO,CAACU,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASK;AAFP,KAAb;AAIH;;AAED,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAG,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADJ,eAEI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,sBAAsB,CAACY,GAAvB,CAA2B,CAACC,iBAAD,EAAoBC,KAApB,kBACxB;AAAK,IAAA,GAAG,EAAKA,KAAb;AAAoB,IAAA,SAAS,EAAG,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAIA,KAAZ;AAAmB,IAAA,GAAG,EAAIC,OAAO,CAAE,mDAAkDD,KAAK,GAAC,CAAE,MAA5D,CAAjC;AAAqG,IAAA,KAAK,EAAE,OAA5G;AAAoH,IAAA,MAAM,EAAG,OAA7H;AAAqI,IAAA,GAAG,EAAK,sBAAqBA,KAAK,GAAC,CAAE,EAA1K;AAA6K,IAAA,OAAO,EAAIT,CAAC,IAAID,MAAM,CAACC,CAAD,CAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,CAFJ,CADJ;AAaH,CAnCD;;AAqCAR,iBAAiB,CAACmB,SAAlB,GAA8B;AAC1BpB,EAAAA,YAAY,EAAED,SAAS,CAACsB,IAAV,CAAeC;AADH,CAA9B;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAO;AAACE,EAAAA;AAAD,CAAP,CAAP,CAA8BC,iBAA9B,CAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n//redux imports\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addContainer} from '../actions/userSelections';\r\nconst QuestionContainer = ({addContainer}) => {\r\n    //initialize hisotry object so that we can move on to the next part when a button is clicked\r\n    let history = useHistory();\r\n    \r\n\r\n    //builds an array that is loopable, allowing all the images to easily be displayed\r\n    let NUMBER_OF_IMAGES = 2;\r\n    let questionContainerArray = new Array(2);\r\n    for(let i = 0; i < questionContainerArray.length; i++){\r\n        questionContainerArray[i] = \"\";\r\n    }\r\n    \r\n\r\n    //initializes the function that will allow the user to go to the confirmation page\r\n    function goNext(e){\r\n        addContainer(e.target.src);\r\n        history.push({\r\n            pathname: '/confirm',\r\n            state: e.target.alt\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className = \"game-chooser-text\">Chose the image that the game will hide behind</h1>\r\n            <div className = \"img-positioner\">\r\n                {questionContainerArray.map((questionContainer, index) => (\r\n                    <div key =  {index} className = \"img-holder\">\r\n                        <img key = {index} src = {require(`../images/question container/question_container_${index+1}.jpg`)} width= \"400px\" height = \"400px\" alt = {`question_container_${index+1}`} onClick = {e => goNext(e)} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nQuestionContainer.propTypes = {\r\n    addContainer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addContainer})(QuestionContainer);"]},"metadata":{},"sourceType":"module"}